(* =============================================================================
 * Summary:
 * This file contains the data used for the tests in test.mligo and unit_test.mligo
 * to verify certain calculations. They were randomly generated using the code in 
 * generate_test_params.py. This includes the trade_params list as well as the
 * lists of expected values.
 * 
 * ============================================================================= *)


// params: x    y     dx    target rounds const_fee *OR*  y     x    dy     target rounds const_fee
// params: cash token dcash target rounds const_fee *OR*  token cash dtoken target rounds const_fee
let trade_params : (nat * nat * nat * nat * int * (nat * nat)) list = [
    // Randomly generated by the code in newton.py
    (84442185152505n, 75795440294031n, 31877408144230n, 17507388406031970n, 4, (9_995n, 10_000n)); 
    (40493413745041n, 78379858903478n, 12282167711250n, 12900086644359684n, 4, (9_995n, 10_000n)); 
    (58338203945503n, 90811288519534n, 29442524723290n, 5034871112500851n,  4, (9_995n, 10_000n)); 
    (75580420415723n, 61836899667533n, 15490535496910n, 19187628568289642n, 4, (9_995n, 10_000n)); 
    (98278547603766n, 81021723599659n, 73095040277540n, 3558321607267545n,  4, (9_995n, 10_000n)); 
    (72983174826013n, 89883828796800n, 49919318881169n, 20169413262989399n, 4, (9_995n, 10_000n)); 
    (10070120806836n, 43417183545378n, 6151705621902n,  7367088309737404n,  4, (9_995n, 10_000n)); 
    (96660636777076n, 47700977655272n, 41276129529520n, 2243859537960899n,  4, (9_995n, 10_000n)); 
    (80502782701303n, 54869930383559n, 770467110466n,   25589575776292017n, 4, (9_995n, 10_000n)); 
    (82484497714824n, 66815320123185n, 76357838336n,    12002461633689386n, 4, (9_995n, 10_000n)); 
    (24391087688713n, 32520436274739n, 21231740152865n, 7987726779966031n,  4, (9_995n, 10_000n)); 
    (23861592861522n, 96754025029015n, 19165141490690n, 3286399229764164n,  4, (9_995n, 10_000n)); 
    (8044581855253n,  32005460467254n, 4086170076367n,  17628418100048523n, 4, (9_995n, 10_000n)); 
    (10905784593110n, 55126724609055n, 7705606537813n,  11988600399140458n, 4, (9_995n, 10_000n)); 
    (81446686329134n, 54028360697032n, 52074616615576n, 19716041373015954n, 4, (9_995n, 10_000n)); 
    (58761706417544n, 44498902627552n, 26534110991675n, 11422815069200805n, 4, (9_995n, 10_000n)); 
    (57565101416489n, 29032950240276n, 5498589017858n,  1187954396332469n,  4, (9_995n, 10_000n)); 
    (61277317986861n, 65665938898963n, 29200541127953n, 24453607138966176n, 4, (9_995n, 10_000n)); 
    (75760392196644n, 87677037082278n, 69955707915026n, 2891251047954728n,  4, (9_995n, 10_000n)); 
    (89817312135788n, 92308243982018n, 48555232199643n, 18899770392015857n, 4, (9_995n, 10_000n)); 
    (27563412131212n, 81162870850788n, 23414731758113n, 24480647416464902n, 4, (9_995n, 10_000n)); 
    (58980118353116n, 94976487323213n, 34190480342487n, 17749778919594625n, 4, (9_995n, 10_000n)); 
    (66024537862239n, 99625783935358n, 60540620161820n, 12875525086730842n, 4, (9_995n, 10_000n)); 
    (8237298819664n,  61278310504071n, 4006986250713n,  12079392068032007n, 4, (9_995n, 10_000n)); 
    (84507757567152n, 24303562206185n, 17777793780644n, 25412304086270802n, 4, (9_995n, 10_000n)); 
    (22046053686783n, 79458297171058n, 7331109798492n,  2240722302381635n,  4, (9_995n, 10_000n)); 
    (10060752021609n, 14635848891230n, 7019091303721n,  22849692335923817n, 4, (9_995n, 10_000n)); 
    (91001601469904n, 53419796826072n, 36356933183509n, 4483555129661928n,  4, (9_995n, 10_000n)); 
    (63499990991146n, 60633841775422n, 34922239921032n, 3297780649315541n,  4, (9_995n, 10_000n)); 
    (37013994033519n, 98051665064727n, 1347014663019n,  7010877073651831n,  4, (9_995n, 10_000n)); 
    (96103128023962n, 18497194139744n, 2291712909334n,  26198528315905946n, 4, (9_995n, 10_000n)); 
    (80074659035418n, 93696915864459n, 1824306978616n,  22359468427008789n, 4, (9_995n, 10_000n)); 
    (10150021937417n, 25991988979283n, 2241421948284n,  10846886849997976n, 4, (9_995n, 10_000n)); 
    (35029396739653n, 18031790152968n, 9081467775319n,  21490633538844938n, 4, (9_995n, 10_000n)); 
    (10092124118896n, 98823514872251n, 2011923381214n,  16941325547603659n, 4, (9_995n, 10_000n)); 
    (83832656519342n, 91848206199534n, 14203314808893n, 7328789053975570n,  4, (9_995n, 10_000n)); 
    (96654890304319n, 5805094382649n,  3925415179574n,  5835013055430417n,  4, (9_995n, 10_000n)); 
    (34231254107858n, 25068733928511n, 14960804653710n, 23980977566744069n, 4, (9_995n, 10_000n)); 
    (17481948445144n, 47162541509629n, 7165944994272n,  23380291468586176n, 4, (9_995n, 10_000n)); 
    (35715168259026n, 83766117436898n, 8962102345808n,  24889513981738743n, 4, (9_995n, 10_000n)); 
    (1243631882931n,  74157437741067n, 417756537147n,   19611173057119216n, 4, (9_995n, 10_000n)); 
    (28088316421835n, 24013040782635n, 22887533708411n, 21982451587576923n, 4, (9_995n, 10_000n)); 
    (28787791485640n, 35920119725374n, 27259327753456n, 4768206640047204n,  4, (9_995n, 10_000n)); 
    (71561935030146n, 38801723531250n, 16080132207510n, 2908357079661445n,  4, (9_995n, 10_000n)); 
    (152422185672n,   19230954124467n, 50970236583n,    8037946423401809n,  4, (9_995n, 10_000n)); 
    (63739940112930n, 37864807032309n, 33147737798783n, 1136544615664045n,  4, (9_995n, 10_000n)); 
    (40226707511908n, 70182962393368n, 16823877233009n, 25544634369682273n, 4, (9_995n, 10_000n)); 
    (4677968595679n,  44535218971883n, 1212655407040n,  16081981731120564n, 4, (9_995n, 10_000n)); 
    (52757313016761n, 48726560106903n, 27355330852263n, 2494325814079n,     4, (9_995n, 10_000n)); 
    (88387515424870n, 49458267037529n, 15433860082549n, 1796286177492965n,  4, (9_995n, 10_000n));
]

let mutation_special_cases : (nat * nat * nat * nat * int * (nat * nat)) list = [
    // The first is the default case, and the following three are
    // special test cases that arose out of mutation testing
    (1_000_000_000_000n, 1_000_000_000_000n, 100_000_000n,    281474976710656n,  4, (9_995n, 10_000n)); // defaults
    (200n,               100n,               2000n,           562949953421312n,  4, (9_995n, 10_000n));
    (2000n,              2000n,              10n,             1n,                0, (9_995n, 10_000n));
    (2000n,              2000n,              10n,             1n,               -4, (9_995n, 10_000n));
]

// output: tokens
let expected_tez_to_cash : nat list = [
    // randomly generated cases; output given by the code in newton.py
    7684644214679n; 6627522634244n; 11629960533310n; 3730022326887n; 14408704277699n; 
    14343333072812n; 6382305047971n; 6742677155899n; 174061190357n; 20650880182n; 6152808241539n; 
    17307141973276n; 4095574176966n; 8997231903853n; 8226889682440n; 5221376068332n; 1400385109857n; 
    8003171126768n; 17958643741650n; 12396351099874n; 15042972693408n; 13432556912989n; 19452740705372n; 
    7584864439390n; 1506011529006n; 7284864744699n; 2368005721280n; 5925299495644n; 8549198598795n; 
    1162110698839n; 145970602879n; 701155094107n; 1673079626781n; 1336717859046n; 5810435130088n; 
    4687416592626n; 189655344536n; 2857070652563n; 5103158482294n; 6024364888293n; 6824391186987n; 
    4332290312646n; 7258631303950n; 2808260085636n; 1763137375887n; 8596840726241n; 7717357393733n; 
    3293650207289n; 34809784435284n; 3223144631671n;
]

let mutation_special_cases_tez_to_cash : nat list = [
    // standard and special cases that arose from mutation testing
    99999999n ; 99n ; 0n ; 0n ; 
]

// output: cash
let expected_cash_to_tez : nat list = [
    // randomly generated cases; output given by the code in newton.py
    54977554528920n; 14326077562467n; 33185978170008n; 36919886772838n; 83868351719277n; 53584559692273n; 
    3302837610825n; 80812709875727n; 3296013551158n; 281524361935n; 18985910893469n; 9981612340657n; 
    2434612027250n; 3540321719820n; 70688073559512n; 44300309386382n; 18589269296616n; 40952375457146n; 
    62632517479898n; 64537467275291n; 14678101736419n; 35530376159489n; 50131919458086n; 1425517206279n; 
    68204554465192n; 5117687296046n; 6954454766276n; 71614022349236n; 47150373963547n; 1483656664992n; 
    28279972638610n; 4499590685779n; 2230170060143n; 24719023888604n; 592113557796n; 29327356628662n; 
    63766013814441n; 25821425085089n; 6045149772563n; 9386571546478n; 20782930679n; 24317549833394n; 
    23485610799313n; 45521113717997n; 1205555192n; 52415099021204n; 19113043283623n; 362225323455n; 
    7284120503577n; 46611909660971n;
]

let mutation_special_cases_cash_to_tez : nat list = [
    // standard and special cases that arose from mutation testing
    99999999n ; 199n ; 0n ; 0n ;
]
